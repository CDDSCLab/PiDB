// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: master.proto

#include "master.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace pidb {
class PiDBClientRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PiDBClientRequest>
      _instance;
} _PiDBClientRequest_default_instance_;
class PiDBClientResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PiDBClientResponse>
      _instance;
} _PiDBClientResponse_default_instance_;
class PiDBStoreRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PiDBStoreRequest>
      _instance;
} _PiDBStoreRequest_default_instance_;
class PiDBStoreResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PiDBStoreResponse>
      _instance;
} _PiDBStoreResponse_default_instance_;
class PiDBRaftManageRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PiDBRaftManageRequest>
      _instance;
} _PiDBRaftManageRequest_default_instance_;
class PiDBRaftManageResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PiDBRaftManageResponse>
      _instance;
} _PiDBRaftManageResponse_default_instance_;
class PiDBRegionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PiDBRegionRequest>
      _instance;
} _PiDBRegionRequest_default_instance_;
class PiDBRegionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PiDBRegionResponse>
      _instance;
} _PiDBRegionResponse_default_instance_;
class PiDBSplitRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PiDBSplitRequest>
      _instance;
} _PiDBSplitRequest_default_instance_;
class PiDBSplitResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PiDBSplitResponse>
      _instance;
} _PiDBSplitResponse_default_instance_;
class PiDBPullRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PiDBPullRequest>
      _instance;
} _PiDBPullRequest_default_instance_;
class PiDBPullResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PiDBPullResponse>
      _instance;
} _PiDBPullResponse_default_instance_;
}  // namespace pidb
namespace protobuf_master_2eproto {
static void InitDefaultsPiDBClientRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pidb::_PiDBClientRequest_default_instance_;
    new (ptr) ::pidb::PiDBClientRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pidb::PiDBClientRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PiDBClientRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPiDBClientRequest}, {}};

static void InitDefaultsPiDBClientResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pidb::_PiDBClientResponse_default_instance_;
    new (ptr) ::pidb::PiDBClientResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pidb::PiDBClientResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PiDBClientResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPiDBClientResponse}, {}};

static void InitDefaultsPiDBStoreRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pidb::_PiDBStoreRequest_default_instance_;
    new (ptr) ::pidb::PiDBStoreRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pidb::PiDBStoreRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PiDBStoreRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPiDBStoreRequest}, {}};

static void InitDefaultsPiDBStoreResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pidb::_PiDBStoreResponse_default_instance_;
    new (ptr) ::pidb::PiDBStoreResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pidb::PiDBStoreResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PiDBStoreResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPiDBStoreResponse}, {}};

static void InitDefaultsPiDBRaftManageRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pidb::_PiDBRaftManageRequest_default_instance_;
    new (ptr) ::pidb::PiDBRaftManageRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pidb::PiDBRaftManageRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PiDBRaftManageRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPiDBRaftManageRequest}, {}};

static void InitDefaultsPiDBRaftManageResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pidb::_PiDBRaftManageResponse_default_instance_;
    new (ptr) ::pidb::PiDBRaftManageResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pidb::PiDBRaftManageResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PiDBRaftManageResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPiDBRaftManageResponse}, {}};

static void InitDefaultsPiDBRegionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pidb::_PiDBRegionRequest_default_instance_;
    new (ptr) ::pidb::PiDBRegionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pidb::PiDBRegionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PiDBRegionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPiDBRegionRequest}, {}};

static void InitDefaultsPiDBRegionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pidb::_PiDBRegionResponse_default_instance_;
    new (ptr) ::pidb::PiDBRegionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pidb::PiDBRegionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PiDBRegionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPiDBRegionResponse}, {}};

static void InitDefaultsPiDBSplitRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pidb::_PiDBSplitRequest_default_instance_;
    new (ptr) ::pidb::PiDBSplitRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pidb::PiDBSplitRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PiDBSplitRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPiDBSplitRequest}, {}};

static void InitDefaultsPiDBSplitResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pidb::_PiDBSplitResponse_default_instance_;
    new (ptr) ::pidb::PiDBSplitResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pidb::PiDBSplitResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PiDBSplitResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPiDBSplitResponse}, {}};

static void InitDefaultsPiDBPullRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pidb::_PiDBPullRequest_default_instance_;
    new (ptr) ::pidb::PiDBPullRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pidb::PiDBPullRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PiDBPullRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPiDBPullRequest}, {}};

static void InitDefaultsPiDBPullResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pidb::_PiDBPullResponse_default_instance_;
    new (ptr) ::pidb::PiDBPullResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pidb::PiDBPullResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PiDBPullResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPiDBPullResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_PiDBClientRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PiDBClientResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PiDBStoreRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PiDBStoreResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PiDBRaftManageRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PiDBRaftManageResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PiDBRegionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PiDBRegionResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PiDBSplitRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PiDBSplitResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PiDBPullRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PiDBPullResponse.base);
}

::google::protobuf::Metadata file_level_metadata[12];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBClientRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBClientRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBClientRequest, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBClientRequest, action_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBClientResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBClientResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBClientResponse, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBClientResponse, redirect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBClientResponse, leader_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBClientResponse, raft_group_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBClientResponse, raft_conf_),
  4,
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBStoreRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBStoreRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBStoreRequest, store_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBStoreRequest, region_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBStoreRequest, leader_num_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBStoreResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBStoreResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBStoreResponse, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBStoreResponse, redirect_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBRaftManageRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBRaftManageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBRaftManageRequest, is_new_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBRaftManageRequest, raft_group_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBRaftManageRequest, raft_conf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBRaftManageRequest, min_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBRaftManageRequest, max_key_),
  4,
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBRaftManageResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBRaftManageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBRaftManageResponse, is_leader_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBRaftManageResponse, leader_addr_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBRegionRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBRegionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBRegionRequest, leader_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBRegionRequest, raft_group_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBRegionRequest, peer_addr_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBRegionResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBRegionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBRegionResponse, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBRegionResponse, redirect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBRegionResponse, conf_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBSplitRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBSplitRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBSplitRequest, leader_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBSplitRequest, raft_group_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBSplitRequest, split_key_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBSplitResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBSplitResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBSplitResponse, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBSplitResponse, redirect_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBPullRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBPullRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBPullRequest, leader_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBPullRequest, raft_group_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBPullRequest, raft_conf_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBPullResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBPullResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBPullResponse, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBPullResponse, redirect_),
  1,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::pidb::PiDBClientRequest)},
  { 9, 19, sizeof(::pidb::PiDBClientResponse)},
  { 24, 32, sizeof(::pidb::PiDBStoreRequest)},
  { 35, 42, sizeof(::pidb::PiDBStoreResponse)},
  { 44, 54, sizeof(::pidb::PiDBRaftManageRequest)},
  { 59, 66, sizeof(::pidb::PiDBRaftManageResponse)},
  { 68, 76, sizeof(::pidb::PiDBRegionRequest)},
  { 79, 87, sizeof(::pidb::PiDBRegionResponse)},
  { 90, 98, sizeof(::pidb::PiDBSplitRequest)},
  { 101, 108, sizeof(::pidb::PiDBSplitResponse)},
  { 110, 118, sizeof(::pidb::PiDBPullRequest)},
  { 121, 128, sizeof(::pidb::PiDBPullResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::pidb::_PiDBClientRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pidb::_PiDBClientResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pidb::_PiDBStoreRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pidb::_PiDBStoreResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pidb::_PiDBRaftManageRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pidb::_PiDBRaftManageResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pidb::_PiDBRegionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pidb::_PiDBRegionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pidb::_PiDBSplitRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pidb::_PiDBSplitResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pidb::_PiDBPullRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pidb::_PiDBPullResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "master.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 12);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014master.proto\022\004pidb\"x\n\021PiDBClientReques"
      "t\022\013\n\003key\030\001 \002(\t\022.\n\006action\030\002 \002(\0162\036.pidb.Pi"
      "DBClientRequest.Action\"&\n\006Action\022\007\n\003GET\020"
      "\001\022\007\n\003PUT\020\002\022\n\n\006DELETE\020\003\"s\n\022PiDBClientResp"
      "onse\022\017\n\007success\030\001 \002(\010\022\020\n\010redirect\030\002 \001(\t\022"
      "\023\n\013leader_addr\030\003 \001(\t\022\022\n\nraft_group\030\004 \001(\t"
      "\022\021\n\traft_conf\030\005 \001(\t\"N\n\020PiDBStoreRequest\022"
      "\022\n\nstore_addr\030\001 \002(\t\022\022\n\nregion_num\030\002 \001(\005\022"
      "\022\n\nleader_num\030\003 \001(\005\"6\n\021PiDBStoreResponse"
      "\022\017\n\007success\030\001 \002(\010\022\020\n\010redirect\030\002 \001(\t\"p\n\025P"
      "iDBRaftManageRequest\022\016\n\006is_new\030\001 \002(\010\022\022\n\n"
      "raft_group\030\002 \002(\t\022\021\n\traft_conf\030\003 \001(\t\022\017\n\007m"
      "in_key\030\004 \001(\t\022\017\n\007max_key\030\005 \001(\t\"@\n\026PiDBRaf"
      "tManageResponse\022\021\n\tis_leader\030\001 \002(\010\022\023\n\013le"
      "ader_addr\030\002 \001(\t\"O\n\021PiDBRegionRequest\022\023\n\013"
      "leader_addr\030\001 \002(\t\022\022\n\nraft_group\030\002 \002(\t\022\021\n"
      "\tpeer_addr\030\003 \003(\t\"E\n\022PiDBRegionResponse\022\017"
      "\n\007success\030\001 \002(\010\022\020\n\010redirect\030\002 \001(\t\022\014\n\004con"
      "f\030\003 \001(\t\"N\n\020PiDBSplitRequest\022\023\n\013leader_ad"
      "dr\030\001 \002(\t\022\022\n\nraft_group\030\002 \002(\t\022\021\n\tsplit_ke"
      "y\030\003 \002(\t\"6\n\021PiDBSplitResponse\022\017\n\007success\030"
      "\001 \002(\010\022\020\n\010redirect\030\003 \001(\t\"M\n\017PiDBPullReque"
      "st\022\023\n\013leader_addr\030\001 \002(\t\022\022\n\nraft_group\030\002 "
      "\002(\t\022\021\n\traft_conf\030\003 \002(\t\"5\n\020PiDBPullRespon"
      "se\022\017\n\007success\030\001 \002(\010\022\020\n\010redirect\030\002 \001(\t2\235\003"
      "\n\rMasterService\022\?\n\nQueryRoute\022\027.pidb.PiD"
      "BClientRequest\032\030.pidb.PiDBClientResponse"
      "\022A\n\016StoreHeartbeat\022\026.pidb.PiDBStoreReque"
      "st\032\027.pidb.PiDBStoreResponse\022D\n\017RegionHea"
      "rtbeat\022\027.pidb.PiDBRegionRequest\032\030.pidb.P"
      "iDBRegionResponse\022G\n\nRaftManage\022\033.pidb.P"
      "iDBRaftManageRequest\032\034.pidb.PiDBRaftMana"
      "geResponse\022>\n\013RegionSplit\022\026.pidb.PiDBSpl"
      "itRequest\032\027.pidb.PiDBSplitResponse\0229\n\010Pu"
      "llData\022\025.pidb.PiDBPullRequest\032\026.pidb.PiD"
      "BPullResponseB\003\200\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1418);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "master.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_master_2eproto
namespace pidb {
const ::google::protobuf::EnumDescriptor* PiDBClientRequest_Action_descriptor() {
  protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_master_2eproto::file_level_enum_descriptors[0];
}
bool PiDBClientRequest_Action_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PiDBClientRequest_Action PiDBClientRequest::GET;
const PiDBClientRequest_Action PiDBClientRequest::PUT;
const PiDBClientRequest_Action PiDBClientRequest::DELETE;
const PiDBClientRequest_Action PiDBClientRequest::Action_MIN;
const PiDBClientRequest_Action PiDBClientRequest::Action_MAX;
const int PiDBClientRequest::Action_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void PiDBClientRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PiDBClientRequest::kKeyFieldNumber;
const int PiDBClientRequest::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PiDBClientRequest::PiDBClientRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_master_2eproto::scc_info_PiDBClientRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pidb.PiDBClientRequest)
}
PiDBClientRequest::PiDBClientRequest(const PiDBClientRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  action_ = from.action_;
  // @@protoc_insertion_point(copy_constructor:pidb.PiDBClientRequest)
}

void PiDBClientRequest::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  action_ = 1;
}

PiDBClientRequest::~PiDBClientRequest() {
  // @@protoc_insertion_point(destructor:pidb.PiDBClientRequest)
  SharedDtor();
}

void PiDBClientRequest::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PiDBClientRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PiDBClientRequest::descriptor() {
  ::protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PiDBClientRequest& PiDBClientRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_master_2eproto::scc_info_PiDBClientRequest.base);
  return *internal_default_instance();
}


void PiDBClientRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pidb.PiDBClientRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      key_.ClearNonDefaultToEmptyNoArena();
    }
    action_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PiDBClientRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pidb.PiDBClientRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pidb.PiDBClientRequest.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .pidb.PiDBClientRequest.Action action = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pidb::PiDBClientRequest_Action_IsValid(value)) {
            set_action(static_cast< ::pidb::PiDBClientRequest_Action >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pidb.PiDBClientRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pidb.PiDBClientRequest)
  return false;
#undef DO_
}

void PiDBClientRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pidb.PiDBClientRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBClientRequest.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // required .pidb.PiDBClientRequest.Action action = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->action(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pidb.PiDBClientRequest)
}

::google::protobuf::uint8* PiDBClientRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pidb.PiDBClientRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBClientRequest.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // required .pidb.PiDBClientRequest.Action action = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->action(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pidb.PiDBClientRequest)
  return target;
}

size_t PiDBClientRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pidb.PiDBClientRequest)
  size_t total_size = 0;

  if (has_key()) {
    // required string key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  if (has_action()) {
    // required .pidb.PiDBClientRequest.Action action = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->action());
  }

  return total_size;
}
size_t PiDBClientRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pidb.PiDBClientRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());

    // required .pidb.PiDBClientRequest.Action action = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->action());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PiDBClientRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pidb.PiDBClientRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PiDBClientRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PiDBClientRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pidb.PiDBClientRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pidb.PiDBClientRequest)
    MergeFrom(*source);
  }
}

void PiDBClientRequest::MergeFrom(const PiDBClientRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pidb.PiDBClientRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      action_ = from.action_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PiDBClientRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pidb.PiDBClientRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PiDBClientRequest::CopyFrom(const PiDBClientRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pidb.PiDBClientRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PiDBClientRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void PiDBClientRequest::Swap(PiDBClientRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PiDBClientRequest::InternalSwap(PiDBClientRequest* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(action_, other->action_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PiDBClientRequest::GetMetadata() const {
  protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PiDBClientResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PiDBClientResponse::kSuccessFieldNumber;
const int PiDBClientResponse::kRedirectFieldNumber;
const int PiDBClientResponse::kLeaderAddrFieldNumber;
const int PiDBClientResponse::kRaftGroupFieldNumber;
const int PiDBClientResponse::kRaftConfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PiDBClientResponse::PiDBClientResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_master_2eproto::scc_info_PiDBClientResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pidb.PiDBClientResponse)
}
PiDBClientResponse::PiDBClientResponse(const PiDBClientResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  redirect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_redirect()) {
    redirect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  leader_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_leader_addr()) {
    leader_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leader_addr_);
  }
  raft_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_raft_group()) {
    raft_group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.raft_group_);
  }
  raft_conf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_raft_conf()) {
    raft_conf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.raft_conf_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:pidb.PiDBClientResponse)
}

void PiDBClientResponse::SharedCtor() {
  redirect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  leader_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  raft_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  raft_conf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

PiDBClientResponse::~PiDBClientResponse() {
  // @@protoc_insertion_point(destructor:pidb.PiDBClientResponse)
  SharedDtor();
}

void PiDBClientResponse::SharedDtor() {
  redirect_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  leader_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  raft_group_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  raft_conf_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PiDBClientResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PiDBClientResponse::descriptor() {
  ::protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PiDBClientResponse& PiDBClientResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_master_2eproto::scc_info_PiDBClientResponse.base);
  return *internal_default_instance();
}


void PiDBClientResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pidb.PiDBClientResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      redirect_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      leader_addr_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      raft_group_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      raft_conf_.ClearNonDefaultToEmptyNoArena();
    }
  }
  success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PiDBClientResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pidb.PiDBClientResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string redirect = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_redirect()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->redirect().data(), static_cast<int>(this->redirect().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pidb.PiDBClientResponse.redirect");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string leader_addr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_leader_addr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->leader_addr().data(), static_cast<int>(this->leader_addr().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pidb.PiDBClientResponse.leader_addr");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string raft_group = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_raft_group()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->raft_group().data(), static_cast<int>(this->raft_group().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pidb.PiDBClientResponse.raft_group");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string raft_conf = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_raft_conf()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->raft_conf().data(), static_cast<int>(this->raft_conf().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pidb.PiDBClientResponse.raft_conf");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pidb.PiDBClientResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pidb.PiDBClientResponse)
  return false;
#undef DO_
}

void PiDBClientResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pidb.PiDBClientResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // optional string redirect = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirect().data(), static_cast<int>(this->redirect().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBClientResponse.redirect");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->redirect(), output);
  }

  // optional string leader_addr = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->leader_addr().data(), static_cast<int>(this->leader_addr().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBClientResponse.leader_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->leader_addr(), output);
  }

  // optional string raft_group = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->raft_group().data(), static_cast<int>(this->raft_group().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBClientResponse.raft_group");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->raft_group(), output);
  }

  // optional string raft_conf = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->raft_conf().data(), static_cast<int>(this->raft_conf().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBClientResponse.raft_conf");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->raft_conf(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pidb.PiDBClientResponse)
}

::google::protobuf::uint8* PiDBClientResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pidb.PiDBClientResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // optional string redirect = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirect().data(), static_cast<int>(this->redirect().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBClientResponse.redirect");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->redirect(), target);
  }

  // optional string leader_addr = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->leader_addr().data(), static_cast<int>(this->leader_addr().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBClientResponse.leader_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->leader_addr(), target);
  }

  // optional string raft_group = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->raft_group().data(), static_cast<int>(this->raft_group().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBClientResponse.raft_group");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->raft_group(), target);
  }

  // optional string raft_conf = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->raft_conf().data(), static_cast<int>(this->raft_conf().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBClientResponse.raft_conf");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->raft_conf(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pidb.PiDBClientResponse)
  return target;
}

size_t PiDBClientResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pidb.PiDBClientResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bool success = 1;
  if (has_success()) {
    total_size += 1 + 1;
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string redirect = 2;
    if (has_redirect()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->redirect());
    }

    // optional string leader_addr = 3;
    if (has_leader_addr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->leader_addr());
    }

    // optional string raft_group = 4;
    if (has_raft_group()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->raft_group());
    }

    // optional string raft_conf = 5;
    if (has_raft_conf()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->raft_conf());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PiDBClientResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pidb.PiDBClientResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PiDBClientResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PiDBClientResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pidb.PiDBClientResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pidb.PiDBClientResponse)
    MergeFrom(*source);
  }
}

void PiDBClientResponse::MergeFrom(const PiDBClientResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pidb.PiDBClientResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_redirect();
      redirect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_leader_addr();
      leader_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leader_addr_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_raft_group();
      raft_group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.raft_group_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_raft_conf();
      raft_conf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.raft_conf_);
    }
    if (cached_has_bits & 0x00000010u) {
      success_ = from.success_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PiDBClientResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pidb.PiDBClientResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PiDBClientResponse::CopyFrom(const PiDBClientResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pidb.PiDBClientResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PiDBClientResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000010) != 0x00000010) return false;
  return true;
}

void PiDBClientResponse::Swap(PiDBClientResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PiDBClientResponse::InternalSwap(PiDBClientResponse* other) {
  using std::swap;
  redirect_.Swap(&other->redirect_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  leader_addr_.Swap(&other->leader_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  raft_group_.Swap(&other->raft_group_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  raft_conf_.Swap(&other->raft_conf_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(success_, other->success_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PiDBClientResponse::GetMetadata() const {
  protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PiDBStoreRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PiDBStoreRequest::kStoreAddrFieldNumber;
const int PiDBStoreRequest::kRegionNumFieldNumber;
const int PiDBStoreRequest::kLeaderNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PiDBStoreRequest::PiDBStoreRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_master_2eproto::scc_info_PiDBStoreRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pidb.PiDBStoreRequest)
}
PiDBStoreRequest::PiDBStoreRequest(const PiDBStoreRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  store_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_store_addr()) {
    store_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.store_addr_);
  }
  ::memcpy(&region_num_, &from.region_num_,
    static_cast<size_t>(reinterpret_cast<char*>(&leader_num_) -
    reinterpret_cast<char*>(&region_num_)) + sizeof(leader_num_));
  // @@protoc_insertion_point(copy_constructor:pidb.PiDBStoreRequest)
}

void PiDBStoreRequest::SharedCtor() {
  store_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&region_num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&leader_num_) -
      reinterpret_cast<char*>(&region_num_)) + sizeof(leader_num_));
}

PiDBStoreRequest::~PiDBStoreRequest() {
  // @@protoc_insertion_point(destructor:pidb.PiDBStoreRequest)
  SharedDtor();
}

void PiDBStoreRequest::SharedDtor() {
  store_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PiDBStoreRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PiDBStoreRequest::descriptor() {
  ::protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PiDBStoreRequest& PiDBStoreRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_master_2eproto::scc_info_PiDBStoreRequest.base);
  return *internal_default_instance();
}


void PiDBStoreRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pidb.PiDBStoreRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    store_addr_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&region_num_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&leader_num_) -
        reinterpret_cast<char*>(&region_num_)) + sizeof(leader_num_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PiDBStoreRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pidb.PiDBStoreRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string store_addr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_store_addr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->store_addr().data(), static_cast<int>(this->store_addr().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pidb.PiDBStoreRequest.store_addr");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 region_num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_region_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &region_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 leader_num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_leader_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &leader_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pidb.PiDBStoreRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pidb.PiDBStoreRequest)
  return false;
#undef DO_
}

void PiDBStoreRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pidb.PiDBStoreRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string store_addr = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->store_addr().data(), static_cast<int>(this->store_addr().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBStoreRequest.store_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->store_addr(), output);
  }

  // optional int32 region_num = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->region_num(), output);
  }

  // optional int32 leader_num = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->leader_num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pidb.PiDBStoreRequest)
}

::google::protobuf::uint8* PiDBStoreRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pidb.PiDBStoreRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string store_addr = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->store_addr().data(), static_cast<int>(this->store_addr().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBStoreRequest.store_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->store_addr(), target);
  }

  // optional int32 region_num = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->region_num(), target);
  }

  // optional int32 leader_num = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->leader_num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pidb.PiDBStoreRequest)
  return target;
}

size_t PiDBStoreRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pidb.PiDBStoreRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string store_addr = 1;
  if (has_store_addr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->store_addr());
  }
  if (_has_bits_[0 / 32] & 6u) {
    // optional int32 region_num = 2;
    if (has_region_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->region_num());
    }

    // optional int32 leader_num = 3;
    if (has_leader_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->leader_num());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PiDBStoreRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pidb.PiDBStoreRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PiDBStoreRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PiDBStoreRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pidb.PiDBStoreRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pidb.PiDBStoreRequest)
    MergeFrom(*source);
  }
}

void PiDBStoreRequest::MergeFrom(const PiDBStoreRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pidb.PiDBStoreRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_store_addr();
      store_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.store_addr_);
    }
    if (cached_has_bits & 0x00000002u) {
      region_num_ = from.region_num_;
    }
    if (cached_has_bits & 0x00000004u) {
      leader_num_ = from.leader_num_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PiDBStoreRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pidb.PiDBStoreRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PiDBStoreRequest::CopyFrom(const PiDBStoreRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pidb.PiDBStoreRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PiDBStoreRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void PiDBStoreRequest::Swap(PiDBStoreRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PiDBStoreRequest::InternalSwap(PiDBStoreRequest* other) {
  using std::swap;
  store_addr_.Swap(&other->store_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(region_num_, other->region_num_);
  swap(leader_num_, other->leader_num_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PiDBStoreRequest::GetMetadata() const {
  protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PiDBStoreResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PiDBStoreResponse::kSuccessFieldNumber;
const int PiDBStoreResponse::kRedirectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PiDBStoreResponse::PiDBStoreResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_master_2eproto::scc_info_PiDBStoreResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pidb.PiDBStoreResponse)
}
PiDBStoreResponse::PiDBStoreResponse(const PiDBStoreResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  redirect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_redirect()) {
    redirect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:pidb.PiDBStoreResponse)
}

void PiDBStoreResponse::SharedCtor() {
  redirect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

PiDBStoreResponse::~PiDBStoreResponse() {
  // @@protoc_insertion_point(destructor:pidb.PiDBStoreResponse)
  SharedDtor();
}

void PiDBStoreResponse::SharedDtor() {
  redirect_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PiDBStoreResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PiDBStoreResponse::descriptor() {
  ::protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PiDBStoreResponse& PiDBStoreResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_master_2eproto::scc_info_PiDBStoreResponse.base);
  return *internal_default_instance();
}


void PiDBStoreResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pidb.PiDBStoreResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    redirect_.ClearNonDefaultToEmptyNoArena();
  }
  success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PiDBStoreResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pidb.PiDBStoreResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string redirect = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_redirect()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->redirect().data(), static_cast<int>(this->redirect().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pidb.PiDBStoreResponse.redirect");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pidb.PiDBStoreResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pidb.PiDBStoreResponse)
  return false;
#undef DO_
}

void PiDBStoreResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pidb.PiDBStoreResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // optional string redirect = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirect().data(), static_cast<int>(this->redirect().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBStoreResponse.redirect");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->redirect(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pidb.PiDBStoreResponse)
}

::google::protobuf::uint8* PiDBStoreResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pidb.PiDBStoreResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // optional string redirect = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirect().data(), static_cast<int>(this->redirect().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBStoreResponse.redirect");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->redirect(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pidb.PiDBStoreResponse)
  return target;
}

size_t PiDBStoreResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pidb.PiDBStoreResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bool success = 1;
  if (has_success()) {
    total_size += 1 + 1;
  }
  // optional string redirect = 2;
  if (has_redirect()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->redirect());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PiDBStoreResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pidb.PiDBStoreResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PiDBStoreResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PiDBStoreResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pidb.PiDBStoreResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pidb.PiDBStoreResponse)
    MergeFrom(*source);
  }
}

void PiDBStoreResponse::MergeFrom(const PiDBStoreResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pidb.PiDBStoreResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_redirect();
      redirect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_);
    }
    if (cached_has_bits & 0x00000002u) {
      success_ = from.success_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PiDBStoreResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pidb.PiDBStoreResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PiDBStoreResponse::CopyFrom(const PiDBStoreResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pidb.PiDBStoreResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PiDBStoreResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void PiDBStoreResponse::Swap(PiDBStoreResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PiDBStoreResponse::InternalSwap(PiDBStoreResponse* other) {
  using std::swap;
  redirect_.Swap(&other->redirect_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(success_, other->success_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PiDBStoreResponse::GetMetadata() const {
  protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PiDBRaftManageRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PiDBRaftManageRequest::kIsNewFieldNumber;
const int PiDBRaftManageRequest::kRaftGroupFieldNumber;
const int PiDBRaftManageRequest::kRaftConfFieldNumber;
const int PiDBRaftManageRequest::kMinKeyFieldNumber;
const int PiDBRaftManageRequest::kMaxKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PiDBRaftManageRequest::PiDBRaftManageRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_master_2eproto::scc_info_PiDBRaftManageRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pidb.PiDBRaftManageRequest)
}
PiDBRaftManageRequest::PiDBRaftManageRequest(const PiDBRaftManageRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  raft_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_raft_group()) {
    raft_group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.raft_group_);
  }
  raft_conf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_raft_conf()) {
    raft_conf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.raft_conf_);
  }
  min_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_min_key()) {
    min_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.min_key_);
  }
  max_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_max_key()) {
    max_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.max_key_);
  }
  is_new_ = from.is_new_;
  // @@protoc_insertion_point(copy_constructor:pidb.PiDBRaftManageRequest)
}

void PiDBRaftManageRequest::SharedCtor() {
  raft_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  raft_conf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  min_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  max_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_new_ = false;
}

PiDBRaftManageRequest::~PiDBRaftManageRequest() {
  // @@protoc_insertion_point(destructor:pidb.PiDBRaftManageRequest)
  SharedDtor();
}

void PiDBRaftManageRequest::SharedDtor() {
  raft_group_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  raft_conf_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  min_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  max_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PiDBRaftManageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PiDBRaftManageRequest::descriptor() {
  ::protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PiDBRaftManageRequest& PiDBRaftManageRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_master_2eproto::scc_info_PiDBRaftManageRequest.base);
  return *internal_default_instance();
}


void PiDBRaftManageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pidb.PiDBRaftManageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      raft_group_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      raft_conf_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      min_key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      max_key_.ClearNonDefaultToEmptyNoArena();
    }
  }
  is_new_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PiDBRaftManageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pidb.PiDBRaftManageRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool is_new = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_is_new();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_new_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string raft_group = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_raft_group()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->raft_group().data(), static_cast<int>(this->raft_group().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pidb.PiDBRaftManageRequest.raft_group");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string raft_conf = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_raft_conf()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->raft_conf().data(), static_cast<int>(this->raft_conf().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pidb.PiDBRaftManageRequest.raft_conf");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string min_key = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_min_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->min_key().data(), static_cast<int>(this->min_key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pidb.PiDBRaftManageRequest.min_key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string max_key = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_max_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->max_key().data(), static_cast<int>(this->max_key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pidb.PiDBRaftManageRequest.max_key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pidb.PiDBRaftManageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pidb.PiDBRaftManageRequest)
  return false;
#undef DO_
}

void PiDBRaftManageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pidb.PiDBRaftManageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool is_new = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_new(), output);
  }

  // required string raft_group = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->raft_group().data(), static_cast<int>(this->raft_group().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBRaftManageRequest.raft_group");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->raft_group(), output);
  }

  // optional string raft_conf = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->raft_conf().data(), static_cast<int>(this->raft_conf().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBRaftManageRequest.raft_conf");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->raft_conf(), output);
  }

  // optional string min_key = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->min_key().data(), static_cast<int>(this->min_key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBRaftManageRequest.min_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->min_key(), output);
  }

  // optional string max_key = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->max_key().data(), static_cast<int>(this->max_key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBRaftManageRequest.max_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->max_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pidb.PiDBRaftManageRequest)
}

::google::protobuf::uint8* PiDBRaftManageRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pidb.PiDBRaftManageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool is_new = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_new(), target);
  }

  // required string raft_group = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->raft_group().data(), static_cast<int>(this->raft_group().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBRaftManageRequest.raft_group");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->raft_group(), target);
  }

  // optional string raft_conf = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->raft_conf().data(), static_cast<int>(this->raft_conf().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBRaftManageRequest.raft_conf");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->raft_conf(), target);
  }

  // optional string min_key = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->min_key().data(), static_cast<int>(this->min_key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBRaftManageRequest.min_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->min_key(), target);
  }

  // optional string max_key = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->max_key().data(), static_cast<int>(this->max_key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBRaftManageRequest.max_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->max_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pidb.PiDBRaftManageRequest)
  return target;
}

size_t PiDBRaftManageRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pidb.PiDBRaftManageRequest)
  size_t total_size = 0;

  if (has_raft_group()) {
    // required string raft_group = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->raft_group());
  }

  if (has_is_new()) {
    // required bool is_new = 1;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t PiDBRaftManageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pidb.PiDBRaftManageRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000011) ^ 0x00000011) == 0) {  // All required fields are present.
    // required string raft_group = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->raft_group());

    // required bool is_new = 1;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 14u) {
    // optional string raft_conf = 3;
    if (has_raft_conf()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->raft_conf());
    }

    // optional string min_key = 4;
    if (has_min_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->min_key());
    }

    // optional string max_key = 5;
    if (has_max_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->max_key());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PiDBRaftManageRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pidb.PiDBRaftManageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PiDBRaftManageRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PiDBRaftManageRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pidb.PiDBRaftManageRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pidb.PiDBRaftManageRequest)
    MergeFrom(*source);
  }
}

void PiDBRaftManageRequest::MergeFrom(const PiDBRaftManageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pidb.PiDBRaftManageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_raft_group();
      raft_group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.raft_group_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_raft_conf();
      raft_conf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.raft_conf_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_min_key();
      min_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.min_key_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_max_key();
      max_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.max_key_);
    }
    if (cached_has_bits & 0x00000010u) {
      is_new_ = from.is_new_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PiDBRaftManageRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pidb.PiDBRaftManageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PiDBRaftManageRequest::CopyFrom(const PiDBRaftManageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pidb.PiDBRaftManageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PiDBRaftManageRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000011) != 0x00000011) return false;
  return true;
}

void PiDBRaftManageRequest::Swap(PiDBRaftManageRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PiDBRaftManageRequest::InternalSwap(PiDBRaftManageRequest* other) {
  using std::swap;
  raft_group_.Swap(&other->raft_group_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  raft_conf_.Swap(&other->raft_conf_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  min_key_.Swap(&other->min_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  max_key_.Swap(&other->max_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(is_new_, other->is_new_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PiDBRaftManageRequest::GetMetadata() const {
  protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PiDBRaftManageResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PiDBRaftManageResponse::kIsLeaderFieldNumber;
const int PiDBRaftManageResponse::kLeaderAddrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PiDBRaftManageResponse::PiDBRaftManageResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_master_2eproto::scc_info_PiDBRaftManageResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pidb.PiDBRaftManageResponse)
}
PiDBRaftManageResponse::PiDBRaftManageResponse(const PiDBRaftManageResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  leader_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_leader_addr()) {
    leader_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leader_addr_);
  }
  is_leader_ = from.is_leader_;
  // @@protoc_insertion_point(copy_constructor:pidb.PiDBRaftManageResponse)
}

void PiDBRaftManageResponse::SharedCtor() {
  leader_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_leader_ = false;
}

PiDBRaftManageResponse::~PiDBRaftManageResponse() {
  // @@protoc_insertion_point(destructor:pidb.PiDBRaftManageResponse)
  SharedDtor();
}

void PiDBRaftManageResponse::SharedDtor() {
  leader_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PiDBRaftManageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PiDBRaftManageResponse::descriptor() {
  ::protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PiDBRaftManageResponse& PiDBRaftManageResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_master_2eproto::scc_info_PiDBRaftManageResponse.base);
  return *internal_default_instance();
}


void PiDBRaftManageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pidb.PiDBRaftManageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    leader_addr_.ClearNonDefaultToEmptyNoArena();
  }
  is_leader_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PiDBRaftManageResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pidb.PiDBRaftManageResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool is_leader = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_is_leader();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_leader_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string leader_addr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_leader_addr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->leader_addr().data(), static_cast<int>(this->leader_addr().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pidb.PiDBRaftManageResponse.leader_addr");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pidb.PiDBRaftManageResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pidb.PiDBRaftManageResponse)
  return false;
#undef DO_
}

void PiDBRaftManageResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pidb.PiDBRaftManageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool is_leader = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_leader(), output);
  }

  // optional string leader_addr = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->leader_addr().data(), static_cast<int>(this->leader_addr().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBRaftManageResponse.leader_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->leader_addr(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pidb.PiDBRaftManageResponse)
}

::google::protobuf::uint8* PiDBRaftManageResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pidb.PiDBRaftManageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool is_leader = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_leader(), target);
  }

  // optional string leader_addr = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->leader_addr().data(), static_cast<int>(this->leader_addr().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBRaftManageResponse.leader_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->leader_addr(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pidb.PiDBRaftManageResponse)
  return target;
}

size_t PiDBRaftManageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pidb.PiDBRaftManageResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bool is_leader = 1;
  if (has_is_leader()) {
    total_size += 1 + 1;
  }
  // optional string leader_addr = 2;
  if (has_leader_addr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->leader_addr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PiDBRaftManageResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pidb.PiDBRaftManageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PiDBRaftManageResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PiDBRaftManageResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pidb.PiDBRaftManageResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pidb.PiDBRaftManageResponse)
    MergeFrom(*source);
  }
}

void PiDBRaftManageResponse::MergeFrom(const PiDBRaftManageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pidb.PiDBRaftManageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_leader_addr();
      leader_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leader_addr_);
    }
    if (cached_has_bits & 0x00000002u) {
      is_leader_ = from.is_leader_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PiDBRaftManageResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pidb.PiDBRaftManageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PiDBRaftManageResponse::CopyFrom(const PiDBRaftManageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pidb.PiDBRaftManageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PiDBRaftManageResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void PiDBRaftManageResponse::Swap(PiDBRaftManageResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PiDBRaftManageResponse::InternalSwap(PiDBRaftManageResponse* other) {
  using std::swap;
  leader_addr_.Swap(&other->leader_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(is_leader_, other->is_leader_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PiDBRaftManageResponse::GetMetadata() const {
  protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PiDBRegionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PiDBRegionRequest::kLeaderAddrFieldNumber;
const int PiDBRegionRequest::kRaftGroupFieldNumber;
const int PiDBRegionRequest::kPeerAddrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PiDBRegionRequest::PiDBRegionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_master_2eproto::scc_info_PiDBRegionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pidb.PiDBRegionRequest)
}
PiDBRegionRequest::PiDBRegionRequest(const PiDBRegionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      peer_addr_(from.peer_addr_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  leader_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_leader_addr()) {
    leader_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leader_addr_);
  }
  raft_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_raft_group()) {
    raft_group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.raft_group_);
  }
  // @@protoc_insertion_point(copy_constructor:pidb.PiDBRegionRequest)
}

void PiDBRegionRequest::SharedCtor() {
  leader_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  raft_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PiDBRegionRequest::~PiDBRegionRequest() {
  // @@protoc_insertion_point(destructor:pidb.PiDBRegionRequest)
  SharedDtor();
}

void PiDBRegionRequest::SharedDtor() {
  leader_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  raft_group_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PiDBRegionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PiDBRegionRequest::descriptor() {
  ::protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PiDBRegionRequest& PiDBRegionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_master_2eproto::scc_info_PiDBRegionRequest.base);
  return *internal_default_instance();
}


void PiDBRegionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pidb.PiDBRegionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  peer_addr_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      leader_addr_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      raft_group_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PiDBRegionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pidb.PiDBRegionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string leader_addr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_leader_addr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->leader_addr().data(), static_cast<int>(this->leader_addr().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pidb.PiDBRegionRequest.leader_addr");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string raft_group = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_raft_group()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->raft_group().data(), static_cast<int>(this->raft_group().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pidb.PiDBRegionRequest.raft_group");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string peer_addr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_peer_addr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->peer_addr(this->peer_addr_size() - 1).data(),
            static_cast<int>(this->peer_addr(this->peer_addr_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pidb.PiDBRegionRequest.peer_addr");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pidb.PiDBRegionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pidb.PiDBRegionRequest)
  return false;
#undef DO_
}

void PiDBRegionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pidb.PiDBRegionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string leader_addr = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->leader_addr().data(), static_cast<int>(this->leader_addr().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBRegionRequest.leader_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->leader_addr(), output);
  }

  // required string raft_group = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->raft_group().data(), static_cast<int>(this->raft_group().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBRegionRequest.raft_group");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->raft_group(), output);
  }

  // repeated string peer_addr = 3;
  for (int i = 0, n = this->peer_addr_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->peer_addr(i).data(), static_cast<int>(this->peer_addr(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBRegionRequest.peer_addr");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->peer_addr(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pidb.PiDBRegionRequest)
}

::google::protobuf::uint8* PiDBRegionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pidb.PiDBRegionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string leader_addr = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->leader_addr().data(), static_cast<int>(this->leader_addr().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBRegionRequest.leader_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->leader_addr(), target);
  }

  // required string raft_group = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->raft_group().data(), static_cast<int>(this->raft_group().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBRegionRequest.raft_group");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->raft_group(), target);
  }

  // repeated string peer_addr = 3;
  for (int i = 0, n = this->peer_addr_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->peer_addr(i).data(), static_cast<int>(this->peer_addr(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBRegionRequest.peer_addr");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->peer_addr(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pidb.PiDBRegionRequest)
  return target;
}

size_t PiDBRegionRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pidb.PiDBRegionRequest)
  size_t total_size = 0;

  if (has_leader_addr()) {
    // required string leader_addr = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->leader_addr());
  }

  if (has_raft_group()) {
    // required string raft_group = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->raft_group());
  }

  return total_size;
}
size_t PiDBRegionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pidb.PiDBRegionRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string leader_addr = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->leader_addr());

    // required string raft_group = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->raft_group());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated string peer_addr = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->peer_addr_size());
  for (int i = 0, n = this->peer_addr_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->peer_addr(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PiDBRegionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pidb.PiDBRegionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PiDBRegionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PiDBRegionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pidb.PiDBRegionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pidb.PiDBRegionRequest)
    MergeFrom(*source);
  }
}

void PiDBRegionRequest::MergeFrom(const PiDBRegionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pidb.PiDBRegionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  peer_addr_.MergeFrom(from.peer_addr_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_leader_addr();
      leader_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leader_addr_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_raft_group();
      raft_group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.raft_group_);
    }
  }
}

void PiDBRegionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pidb.PiDBRegionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PiDBRegionRequest::CopyFrom(const PiDBRegionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pidb.PiDBRegionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PiDBRegionRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void PiDBRegionRequest::Swap(PiDBRegionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PiDBRegionRequest::InternalSwap(PiDBRegionRequest* other) {
  using std::swap;
  peer_addr_.InternalSwap(CastToBase(&other->peer_addr_));
  leader_addr_.Swap(&other->leader_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  raft_group_.Swap(&other->raft_group_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PiDBRegionRequest::GetMetadata() const {
  protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PiDBRegionResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PiDBRegionResponse::kSuccessFieldNumber;
const int PiDBRegionResponse::kRedirectFieldNumber;
const int PiDBRegionResponse::kConfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PiDBRegionResponse::PiDBRegionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_master_2eproto::scc_info_PiDBRegionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pidb.PiDBRegionResponse)
}
PiDBRegionResponse::PiDBRegionResponse(const PiDBRegionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  redirect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_redirect()) {
    redirect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  conf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_conf()) {
    conf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.conf_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:pidb.PiDBRegionResponse)
}

void PiDBRegionResponse::SharedCtor() {
  redirect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  conf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

PiDBRegionResponse::~PiDBRegionResponse() {
  // @@protoc_insertion_point(destructor:pidb.PiDBRegionResponse)
  SharedDtor();
}

void PiDBRegionResponse::SharedDtor() {
  redirect_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  conf_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PiDBRegionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PiDBRegionResponse::descriptor() {
  ::protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PiDBRegionResponse& PiDBRegionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_master_2eproto::scc_info_PiDBRegionResponse.base);
  return *internal_default_instance();
}


void PiDBRegionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pidb.PiDBRegionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      redirect_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      conf_.ClearNonDefaultToEmptyNoArena();
    }
  }
  success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PiDBRegionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pidb.PiDBRegionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string redirect = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_redirect()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->redirect().data(), static_cast<int>(this->redirect().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pidb.PiDBRegionResponse.redirect");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string conf = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_conf()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->conf().data(), static_cast<int>(this->conf().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pidb.PiDBRegionResponse.conf");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pidb.PiDBRegionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pidb.PiDBRegionResponse)
  return false;
#undef DO_
}

void PiDBRegionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pidb.PiDBRegionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // optional string redirect = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirect().data(), static_cast<int>(this->redirect().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBRegionResponse.redirect");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->redirect(), output);
  }

  // optional string conf = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->conf().data(), static_cast<int>(this->conf().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBRegionResponse.conf");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->conf(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pidb.PiDBRegionResponse)
}

::google::protobuf::uint8* PiDBRegionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pidb.PiDBRegionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // optional string redirect = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirect().data(), static_cast<int>(this->redirect().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBRegionResponse.redirect");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->redirect(), target);
  }

  // optional string conf = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->conf().data(), static_cast<int>(this->conf().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBRegionResponse.conf");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->conf(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pidb.PiDBRegionResponse)
  return target;
}

size_t PiDBRegionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pidb.PiDBRegionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bool success = 1;
  if (has_success()) {
    total_size += 1 + 1;
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string redirect = 2;
    if (has_redirect()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->redirect());
    }

    // optional string conf = 3;
    if (has_conf()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->conf());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PiDBRegionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pidb.PiDBRegionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PiDBRegionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PiDBRegionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pidb.PiDBRegionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pidb.PiDBRegionResponse)
    MergeFrom(*source);
  }
}

void PiDBRegionResponse::MergeFrom(const PiDBRegionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pidb.PiDBRegionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_redirect();
      redirect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_conf();
      conf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.conf_);
    }
    if (cached_has_bits & 0x00000004u) {
      success_ = from.success_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PiDBRegionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pidb.PiDBRegionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PiDBRegionResponse::CopyFrom(const PiDBRegionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pidb.PiDBRegionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PiDBRegionResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  return true;
}

void PiDBRegionResponse::Swap(PiDBRegionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PiDBRegionResponse::InternalSwap(PiDBRegionResponse* other) {
  using std::swap;
  redirect_.Swap(&other->redirect_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  conf_.Swap(&other->conf_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(success_, other->success_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PiDBRegionResponse::GetMetadata() const {
  protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PiDBSplitRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PiDBSplitRequest::kLeaderAddrFieldNumber;
const int PiDBSplitRequest::kRaftGroupFieldNumber;
const int PiDBSplitRequest::kSplitKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PiDBSplitRequest::PiDBSplitRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_master_2eproto::scc_info_PiDBSplitRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pidb.PiDBSplitRequest)
}
PiDBSplitRequest::PiDBSplitRequest(const PiDBSplitRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  leader_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_leader_addr()) {
    leader_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leader_addr_);
  }
  raft_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_raft_group()) {
    raft_group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.raft_group_);
  }
  split_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_split_key()) {
    split_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.split_key_);
  }
  // @@protoc_insertion_point(copy_constructor:pidb.PiDBSplitRequest)
}

void PiDBSplitRequest::SharedCtor() {
  leader_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  raft_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  split_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PiDBSplitRequest::~PiDBSplitRequest() {
  // @@protoc_insertion_point(destructor:pidb.PiDBSplitRequest)
  SharedDtor();
}

void PiDBSplitRequest::SharedDtor() {
  leader_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  raft_group_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  split_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PiDBSplitRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PiDBSplitRequest::descriptor() {
  ::protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PiDBSplitRequest& PiDBSplitRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_master_2eproto::scc_info_PiDBSplitRequest.base);
  return *internal_default_instance();
}


void PiDBSplitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pidb.PiDBSplitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      leader_addr_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      raft_group_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      split_key_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PiDBSplitRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pidb.PiDBSplitRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string leader_addr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_leader_addr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->leader_addr().data(), static_cast<int>(this->leader_addr().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pidb.PiDBSplitRequest.leader_addr");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string raft_group = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_raft_group()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->raft_group().data(), static_cast<int>(this->raft_group().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pidb.PiDBSplitRequest.raft_group");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string split_key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_split_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->split_key().data(), static_cast<int>(this->split_key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pidb.PiDBSplitRequest.split_key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pidb.PiDBSplitRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pidb.PiDBSplitRequest)
  return false;
#undef DO_
}

void PiDBSplitRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pidb.PiDBSplitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string leader_addr = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->leader_addr().data(), static_cast<int>(this->leader_addr().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBSplitRequest.leader_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->leader_addr(), output);
  }

  // required string raft_group = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->raft_group().data(), static_cast<int>(this->raft_group().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBSplitRequest.raft_group");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->raft_group(), output);
  }

  // required string split_key = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->split_key().data(), static_cast<int>(this->split_key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBSplitRequest.split_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->split_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pidb.PiDBSplitRequest)
}

::google::protobuf::uint8* PiDBSplitRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pidb.PiDBSplitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string leader_addr = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->leader_addr().data(), static_cast<int>(this->leader_addr().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBSplitRequest.leader_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->leader_addr(), target);
  }

  // required string raft_group = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->raft_group().data(), static_cast<int>(this->raft_group().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBSplitRequest.raft_group");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->raft_group(), target);
  }

  // required string split_key = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->split_key().data(), static_cast<int>(this->split_key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBSplitRequest.split_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->split_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pidb.PiDBSplitRequest)
  return target;
}

size_t PiDBSplitRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pidb.PiDBSplitRequest)
  size_t total_size = 0;

  if (has_leader_addr()) {
    // required string leader_addr = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->leader_addr());
  }

  if (has_raft_group()) {
    // required string raft_group = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->raft_group());
  }

  if (has_split_key()) {
    // required string split_key = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->split_key());
  }

  return total_size;
}
size_t PiDBSplitRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pidb.PiDBSplitRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string leader_addr = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->leader_addr());

    // required string raft_group = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->raft_group());

    // required string split_key = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->split_key());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PiDBSplitRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pidb.PiDBSplitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PiDBSplitRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PiDBSplitRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pidb.PiDBSplitRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pidb.PiDBSplitRequest)
    MergeFrom(*source);
  }
}

void PiDBSplitRequest::MergeFrom(const PiDBSplitRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pidb.PiDBSplitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_leader_addr();
      leader_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leader_addr_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_raft_group();
      raft_group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.raft_group_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_split_key();
      split_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.split_key_);
    }
  }
}

void PiDBSplitRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pidb.PiDBSplitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PiDBSplitRequest::CopyFrom(const PiDBSplitRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pidb.PiDBSplitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PiDBSplitRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void PiDBSplitRequest::Swap(PiDBSplitRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PiDBSplitRequest::InternalSwap(PiDBSplitRequest* other) {
  using std::swap;
  leader_addr_.Swap(&other->leader_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  raft_group_.Swap(&other->raft_group_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  split_key_.Swap(&other->split_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PiDBSplitRequest::GetMetadata() const {
  protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PiDBSplitResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PiDBSplitResponse::kSuccessFieldNumber;
const int PiDBSplitResponse::kRedirectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PiDBSplitResponse::PiDBSplitResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_master_2eproto::scc_info_PiDBSplitResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pidb.PiDBSplitResponse)
}
PiDBSplitResponse::PiDBSplitResponse(const PiDBSplitResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  redirect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_redirect()) {
    redirect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:pidb.PiDBSplitResponse)
}

void PiDBSplitResponse::SharedCtor() {
  redirect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

PiDBSplitResponse::~PiDBSplitResponse() {
  // @@protoc_insertion_point(destructor:pidb.PiDBSplitResponse)
  SharedDtor();
}

void PiDBSplitResponse::SharedDtor() {
  redirect_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PiDBSplitResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PiDBSplitResponse::descriptor() {
  ::protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PiDBSplitResponse& PiDBSplitResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_master_2eproto::scc_info_PiDBSplitResponse.base);
  return *internal_default_instance();
}


void PiDBSplitResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pidb.PiDBSplitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    redirect_.ClearNonDefaultToEmptyNoArena();
  }
  success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PiDBSplitResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pidb.PiDBSplitResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string redirect = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_redirect()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->redirect().data(), static_cast<int>(this->redirect().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pidb.PiDBSplitResponse.redirect");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pidb.PiDBSplitResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pidb.PiDBSplitResponse)
  return false;
#undef DO_
}

void PiDBSplitResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pidb.PiDBSplitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // optional string redirect = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirect().data(), static_cast<int>(this->redirect().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBSplitResponse.redirect");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->redirect(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pidb.PiDBSplitResponse)
}

::google::protobuf::uint8* PiDBSplitResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pidb.PiDBSplitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // optional string redirect = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirect().data(), static_cast<int>(this->redirect().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBSplitResponse.redirect");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->redirect(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pidb.PiDBSplitResponse)
  return target;
}

size_t PiDBSplitResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pidb.PiDBSplitResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bool success = 1;
  if (has_success()) {
    total_size += 1 + 1;
  }
  // optional string redirect = 3;
  if (has_redirect()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->redirect());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PiDBSplitResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pidb.PiDBSplitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PiDBSplitResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PiDBSplitResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pidb.PiDBSplitResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pidb.PiDBSplitResponse)
    MergeFrom(*source);
  }
}

void PiDBSplitResponse::MergeFrom(const PiDBSplitResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pidb.PiDBSplitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_redirect();
      redirect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_);
    }
    if (cached_has_bits & 0x00000002u) {
      success_ = from.success_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PiDBSplitResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pidb.PiDBSplitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PiDBSplitResponse::CopyFrom(const PiDBSplitResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pidb.PiDBSplitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PiDBSplitResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void PiDBSplitResponse::Swap(PiDBSplitResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PiDBSplitResponse::InternalSwap(PiDBSplitResponse* other) {
  using std::swap;
  redirect_.Swap(&other->redirect_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(success_, other->success_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PiDBSplitResponse::GetMetadata() const {
  protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PiDBPullRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PiDBPullRequest::kLeaderAddrFieldNumber;
const int PiDBPullRequest::kRaftGroupFieldNumber;
const int PiDBPullRequest::kRaftConfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PiDBPullRequest::PiDBPullRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_master_2eproto::scc_info_PiDBPullRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pidb.PiDBPullRequest)
}
PiDBPullRequest::PiDBPullRequest(const PiDBPullRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  leader_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_leader_addr()) {
    leader_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leader_addr_);
  }
  raft_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_raft_group()) {
    raft_group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.raft_group_);
  }
  raft_conf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_raft_conf()) {
    raft_conf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.raft_conf_);
  }
  // @@protoc_insertion_point(copy_constructor:pidb.PiDBPullRequest)
}

void PiDBPullRequest::SharedCtor() {
  leader_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  raft_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  raft_conf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PiDBPullRequest::~PiDBPullRequest() {
  // @@protoc_insertion_point(destructor:pidb.PiDBPullRequest)
  SharedDtor();
}

void PiDBPullRequest::SharedDtor() {
  leader_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  raft_group_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  raft_conf_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PiDBPullRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PiDBPullRequest::descriptor() {
  ::protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PiDBPullRequest& PiDBPullRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_master_2eproto::scc_info_PiDBPullRequest.base);
  return *internal_default_instance();
}


void PiDBPullRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pidb.PiDBPullRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      leader_addr_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      raft_group_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      raft_conf_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PiDBPullRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pidb.PiDBPullRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string leader_addr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_leader_addr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->leader_addr().data(), static_cast<int>(this->leader_addr().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pidb.PiDBPullRequest.leader_addr");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string raft_group = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_raft_group()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->raft_group().data(), static_cast<int>(this->raft_group().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pidb.PiDBPullRequest.raft_group");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string raft_conf = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_raft_conf()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->raft_conf().data(), static_cast<int>(this->raft_conf().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pidb.PiDBPullRequest.raft_conf");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pidb.PiDBPullRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pidb.PiDBPullRequest)
  return false;
#undef DO_
}

void PiDBPullRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pidb.PiDBPullRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string leader_addr = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->leader_addr().data(), static_cast<int>(this->leader_addr().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBPullRequest.leader_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->leader_addr(), output);
  }

  // required string raft_group = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->raft_group().data(), static_cast<int>(this->raft_group().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBPullRequest.raft_group");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->raft_group(), output);
  }

  // required string raft_conf = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->raft_conf().data(), static_cast<int>(this->raft_conf().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBPullRequest.raft_conf");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->raft_conf(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pidb.PiDBPullRequest)
}

::google::protobuf::uint8* PiDBPullRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pidb.PiDBPullRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string leader_addr = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->leader_addr().data(), static_cast<int>(this->leader_addr().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBPullRequest.leader_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->leader_addr(), target);
  }

  // required string raft_group = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->raft_group().data(), static_cast<int>(this->raft_group().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBPullRequest.raft_group");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->raft_group(), target);
  }

  // required string raft_conf = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->raft_conf().data(), static_cast<int>(this->raft_conf().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBPullRequest.raft_conf");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->raft_conf(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pidb.PiDBPullRequest)
  return target;
}

size_t PiDBPullRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pidb.PiDBPullRequest)
  size_t total_size = 0;

  if (has_leader_addr()) {
    // required string leader_addr = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->leader_addr());
  }

  if (has_raft_group()) {
    // required string raft_group = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->raft_group());
  }

  if (has_raft_conf()) {
    // required string raft_conf = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->raft_conf());
  }

  return total_size;
}
size_t PiDBPullRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pidb.PiDBPullRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string leader_addr = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->leader_addr());

    // required string raft_group = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->raft_group());

    // required string raft_conf = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->raft_conf());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PiDBPullRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pidb.PiDBPullRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PiDBPullRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PiDBPullRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pidb.PiDBPullRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pidb.PiDBPullRequest)
    MergeFrom(*source);
  }
}

void PiDBPullRequest::MergeFrom(const PiDBPullRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pidb.PiDBPullRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_leader_addr();
      leader_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leader_addr_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_raft_group();
      raft_group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.raft_group_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_raft_conf();
      raft_conf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.raft_conf_);
    }
  }
}

void PiDBPullRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pidb.PiDBPullRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PiDBPullRequest::CopyFrom(const PiDBPullRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pidb.PiDBPullRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PiDBPullRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void PiDBPullRequest::Swap(PiDBPullRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PiDBPullRequest::InternalSwap(PiDBPullRequest* other) {
  using std::swap;
  leader_addr_.Swap(&other->leader_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  raft_group_.Swap(&other->raft_group_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  raft_conf_.Swap(&other->raft_conf_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PiDBPullRequest::GetMetadata() const {
  protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PiDBPullResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PiDBPullResponse::kSuccessFieldNumber;
const int PiDBPullResponse::kRedirectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PiDBPullResponse::PiDBPullResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_master_2eproto::scc_info_PiDBPullResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pidb.PiDBPullResponse)
}
PiDBPullResponse::PiDBPullResponse(const PiDBPullResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  redirect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_redirect()) {
    redirect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:pidb.PiDBPullResponse)
}

void PiDBPullResponse::SharedCtor() {
  redirect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

PiDBPullResponse::~PiDBPullResponse() {
  // @@protoc_insertion_point(destructor:pidb.PiDBPullResponse)
  SharedDtor();
}

void PiDBPullResponse::SharedDtor() {
  redirect_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PiDBPullResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PiDBPullResponse::descriptor() {
  ::protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PiDBPullResponse& PiDBPullResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_master_2eproto::scc_info_PiDBPullResponse.base);
  return *internal_default_instance();
}


void PiDBPullResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pidb.PiDBPullResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    redirect_.ClearNonDefaultToEmptyNoArena();
  }
  success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PiDBPullResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pidb.PiDBPullResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string redirect = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_redirect()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->redirect().data(), static_cast<int>(this->redirect().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pidb.PiDBPullResponse.redirect");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pidb.PiDBPullResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pidb.PiDBPullResponse)
  return false;
#undef DO_
}

void PiDBPullResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pidb.PiDBPullResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // optional string redirect = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirect().data(), static_cast<int>(this->redirect().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBPullResponse.redirect");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->redirect(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pidb.PiDBPullResponse)
}

::google::protobuf::uint8* PiDBPullResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pidb.PiDBPullResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // optional string redirect = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirect().data(), static_cast<int>(this->redirect().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBPullResponse.redirect");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->redirect(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pidb.PiDBPullResponse)
  return target;
}

size_t PiDBPullResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pidb.PiDBPullResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bool success = 1;
  if (has_success()) {
    total_size += 1 + 1;
  }
  // optional string redirect = 2;
  if (has_redirect()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->redirect());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PiDBPullResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pidb.PiDBPullResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PiDBPullResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PiDBPullResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pidb.PiDBPullResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pidb.PiDBPullResponse)
    MergeFrom(*source);
  }
}

void PiDBPullResponse::MergeFrom(const PiDBPullResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pidb.PiDBPullResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_redirect();
      redirect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_);
    }
    if (cached_has_bits & 0x00000002u) {
      success_ = from.success_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PiDBPullResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pidb.PiDBPullResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PiDBPullResponse::CopyFrom(const PiDBPullResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pidb.PiDBPullResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PiDBPullResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void PiDBPullResponse::Swap(PiDBPullResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PiDBPullResponse::InternalSwap(PiDBPullResponse* other) {
  using std::swap;
  redirect_.Swap(&other->redirect_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(success_, other->success_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PiDBPullResponse::GetMetadata() const {
  protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

MasterService::~MasterService() {}

const ::google::protobuf::ServiceDescriptor* MasterService::descriptor() {
  protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_master_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* MasterService::GetDescriptor() {
  return descriptor();
}

void MasterService::QueryRoute(::google::protobuf::RpcController* controller,
                         const ::pidb::PiDBClientRequest*,
                         ::pidb::PiDBClientResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method QueryRoute() not implemented.");
  done->Run();
}

void MasterService::StoreHeartbeat(::google::protobuf::RpcController* controller,
                         const ::pidb::PiDBStoreRequest*,
                         ::pidb::PiDBStoreResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method StoreHeartbeat() not implemented.");
  done->Run();
}

void MasterService::RegionHeartbeat(::google::protobuf::RpcController* controller,
                         const ::pidb::PiDBRegionRequest*,
                         ::pidb::PiDBRegionResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RegionHeartbeat() not implemented.");
  done->Run();
}

void MasterService::RaftManage(::google::protobuf::RpcController* controller,
                         const ::pidb::PiDBRaftManageRequest*,
                         ::pidb::PiDBRaftManageResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RaftManage() not implemented.");
  done->Run();
}

void MasterService::RegionSplit(::google::protobuf::RpcController* controller,
                         const ::pidb::PiDBSplitRequest*,
                         ::pidb::PiDBSplitResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RegionSplit() not implemented.");
  done->Run();
}

void MasterService::PullData(::google::protobuf::RpcController* controller,
                         const ::pidb::PiDBPullRequest*,
                         ::pidb::PiDBPullResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method PullData() not implemented.");
  done->Run();
}

void MasterService::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_master_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      QueryRoute(controller,
             ::google::protobuf::down_cast<const ::pidb::PiDBClientRequest*>(request),
             ::google::protobuf::down_cast< ::pidb::PiDBClientResponse*>(response),
             done);
      break;
    case 1:
      StoreHeartbeat(controller,
             ::google::protobuf::down_cast<const ::pidb::PiDBStoreRequest*>(request),
             ::google::protobuf::down_cast< ::pidb::PiDBStoreResponse*>(response),
             done);
      break;
    case 2:
      RegionHeartbeat(controller,
             ::google::protobuf::down_cast<const ::pidb::PiDBRegionRequest*>(request),
             ::google::protobuf::down_cast< ::pidb::PiDBRegionResponse*>(response),
             done);
      break;
    case 3:
      RaftManage(controller,
             ::google::protobuf::down_cast<const ::pidb::PiDBRaftManageRequest*>(request),
             ::google::protobuf::down_cast< ::pidb::PiDBRaftManageResponse*>(response),
             done);
      break;
    case 4:
      RegionSplit(controller,
             ::google::protobuf::down_cast<const ::pidb::PiDBSplitRequest*>(request),
             ::google::protobuf::down_cast< ::pidb::PiDBSplitResponse*>(response),
             done);
      break;
    case 5:
      PullData(controller,
             ::google::protobuf::down_cast<const ::pidb::PiDBPullRequest*>(request),
             ::google::protobuf::down_cast< ::pidb::PiDBPullResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& MasterService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::pidb::PiDBClientRequest::default_instance();
    case 1:
      return ::pidb::PiDBStoreRequest::default_instance();
    case 2:
      return ::pidb::PiDBRegionRequest::default_instance();
    case 3:
      return ::pidb::PiDBRaftManageRequest::default_instance();
    case 4:
      return ::pidb::PiDBSplitRequest::default_instance();
    case 5:
      return ::pidb::PiDBPullRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& MasterService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::pidb::PiDBClientResponse::default_instance();
    case 1:
      return ::pidb::PiDBStoreResponse::default_instance();
    case 2:
      return ::pidb::PiDBRegionResponse::default_instance();
    case 3:
      return ::pidb::PiDBRaftManageResponse::default_instance();
    case 4:
      return ::pidb::PiDBSplitResponse::default_instance();
    case 5:
      return ::pidb::PiDBPullResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

MasterService_Stub::MasterService_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
MasterService_Stub::MasterService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
MasterService_Stub::~MasterService_Stub() {
  if (owns_channel_) delete channel_;
}

void MasterService_Stub::QueryRoute(::google::protobuf::RpcController* controller,
                              const ::pidb::PiDBClientRequest* request,
                              ::pidb::PiDBClientResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void MasterService_Stub::StoreHeartbeat(::google::protobuf::RpcController* controller,
                              const ::pidb::PiDBStoreRequest* request,
                              ::pidb::PiDBStoreResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void MasterService_Stub::RegionHeartbeat(::google::protobuf::RpcController* controller,
                              const ::pidb::PiDBRegionRequest* request,
                              ::pidb::PiDBRegionResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void MasterService_Stub::RaftManage(::google::protobuf::RpcController* controller,
                              const ::pidb::PiDBRaftManageRequest* request,
                              ::pidb::PiDBRaftManageResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}
void MasterService_Stub::RegionSplit(::google::protobuf::RpcController* controller,
                              const ::pidb::PiDBSplitRequest* request,
                              ::pidb::PiDBSplitResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(4),
                       controller, request, response, done);
}
void MasterService_Stub::PullData(::google::protobuf::RpcController* controller,
                              const ::pidb::PiDBPullRequest* request,
                              ::pidb::PiDBPullResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(5),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace pidb
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pidb::PiDBClientRequest* Arena::CreateMaybeMessage< ::pidb::PiDBClientRequest >(Arena* arena) {
  return Arena::CreateInternal< ::pidb::PiDBClientRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pidb::PiDBClientResponse* Arena::CreateMaybeMessage< ::pidb::PiDBClientResponse >(Arena* arena) {
  return Arena::CreateInternal< ::pidb::PiDBClientResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pidb::PiDBStoreRequest* Arena::CreateMaybeMessage< ::pidb::PiDBStoreRequest >(Arena* arena) {
  return Arena::CreateInternal< ::pidb::PiDBStoreRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pidb::PiDBStoreResponse* Arena::CreateMaybeMessage< ::pidb::PiDBStoreResponse >(Arena* arena) {
  return Arena::CreateInternal< ::pidb::PiDBStoreResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pidb::PiDBRaftManageRequest* Arena::CreateMaybeMessage< ::pidb::PiDBRaftManageRequest >(Arena* arena) {
  return Arena::CreateInternal< ::pidb::PiDBRaftManageRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pidb::PiDBRaftManageResponse* Arena::CreateMaybeMessage< ::pidb::PiDBRaftManageResponse >(Arena* arena) {
  return Arena::CreateInternal< ::pidb::PiDBRaftManageResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pidb::PiDBRegionRequest* Arena::CreateMaybeMessage< ::pidb::PiDBRegionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::pidb::PiDBRegionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pidb::PiDBRegionResponse* Arena::CreateMaybeMessage< ::pidb::PiDBRegionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::pidb::PiDBRegionResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pidb::PiDBSplitRequest* Arena::CreateMaybeMessage< ::pidb::PiDBSplitRequest >(Arena* arena) {
  return Arena::CreateInternal< ::pidb::PiDBSplitRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pidb::PiDBSplitResponse* Arena::CreateMaybeMessage< ::pidb::PiDBSplitResponse >(Arena* arena) {
  return Arena::CreateInternal< ::pidb::PiDBSplitResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pidb::PiDBPullRequest* Arena::CreateMaybeMessage< ::pidb::PiDBPullRequest >(Arena* arena) {
  return Arena::CreateInternal< ::pidb::PiDBPullRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pidb::PiDBPullResponse* Arena::CreateMaybeMessage< ::pidb::PiDBPullResponse >(Arena* arena) {
  return Arena::CreateInternal< ::pidb::PiDBPullResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
