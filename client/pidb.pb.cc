// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pidb.proto

#include "pidb.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_pidb_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_pidb_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PiDBOperator;
}  // namespace protobuf_pidb_2eproto
namespace pidb {
class PiDBRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PiDBRequest>
      _instance;
} _PiDBRequest_default_instance_;
class PiDBOperatorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PiDBOperator>
      _instance;
} _PiDBOperator_default_instance_;
class PiDBWriteBatchDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PiDBWriteBatch>
      _instance;
} _PiDBWriteBatch_default_instance_;
class PiDBSnapshotDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PiDBSnapshot>
      _instance;
} _PiDBSnapshot_default_instance_;
class PiDBResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PiDBResponse>
      _instance;
} _PiDBResponse_default_instance_;
class EmptyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Empty>
      _instance;
} _Empty_default_instance_;
class SuccessDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Success>
      _instance;
} _Success_default_instance_;
}  // namespace pidb
namespace protobuf_pidb_2eproto {
static void InitDefaultsPiDBRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pidb::_PiDBRequest_default_instance_;
    new (ptr) ::pidb::PiDBRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pidb::PiDBRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PiDBRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPiDBRequest}, {}};

static void InitDefaultsPiDBOperator() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pidb::_PiDBOperator_default_instance_;
    new (ptr) ::pidb::PiDBOperator();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pidb::PiDBOperator::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PiDBOperator =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPiDBOperator}, {}};

static void InitDefaultsPiDBWriteBatch() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pidb::_PiDBWriteBatch_default_instance_;
    new (ptr) ::pidb::PiDBWriteBatch();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pidb::PiDBWriteBatch::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PiDBWriteBatch =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPiDBWriteBatch}, {
      &protobuf_pidb_2eproto::scc_info_PiDBOperator.base,}};

static void InitDefaultsPiDBSnapshot() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pidb::_PiDBSnapshot_default_instance_;
    new (ptr) ::pidb::PiDBSnapshot();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pidb::PiDBSnapshot::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PiDBSnapshot =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPiDBSnapshot}, {}};

static void InitDefaultsPiDBResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pidb::_PiDBResponse_default_instance_;
    new (ptr) ::pidb::PiDBResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pidb::PiDBResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PiDBResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPiDBResponse}, {}};

static void InitDefaultsEmpty() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pidb::_Empty_default_instance_;
    new (ptr) ::pidb::Empty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pidb::Empty::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Empty =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEmpty}, {}};

static void InitDefaultsSuccess() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pidb::_Success_default_instance_;
    new (ptr) ::pidb::Success();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pidb::Success::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Success =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSuccess}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_PiDBRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PiDBOperator.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PiDBWriteBatch.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PiDBSnapshot.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PiDBResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Empty.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Success.base);
}

::google::protobuf::Metadata file_level_metadata[7];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBRequest, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBRequest, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBOperator, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBOperator, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBOperator, op_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBOperator, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBOperator, value_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBWriteBatch, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBWriteBatch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBWriteBatch, writebatch_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBSnapshot, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBSnapshot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBSnapshot, id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBResponse, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBResponse, old_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBResponse, new_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::PiDBResponse, redirect_),
  3,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::Empty, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::Empty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::Success, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::Success, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::Success, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pidb::Success, message_),
  1,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::pidb::PiDBRequest)},
  { 9, 17, sizeof(::pidb::PiDBOperator)},
  { 20, 26, sizeof(::pidb::PiDBWriteBatch)},
  { 27, 33, sizeof(::pidb::PiDBSnapshot)},
  { 34, 43, sizeof(::pidb::PiDBResponse)},
  { 47, 52, sizeof(::pidb::Empty)},
  { 52, 59, sizeof(::pidb::Success)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::pidb::_PiDBRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pidb::_PiDBOperator_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pidb::_PiDBWriteBatch_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pidb::_PiDBSnapshot_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pidb::_PiDBResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pidb::_Empty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pidb::_Success_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "pidb.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\npidb.proto\022\004pidb\")\n\013PiDBRequest\022\013\n\003key"
      "\030\001 \002(\t\022\r\n\005value\030\002 \001(\t\"6\n\014PiDBOperator\022\n\n"
      "\002op\030\001 \002(\005\022\013\n\003key\030\002 \002(\t\022\r\n\005value\030\003 \001(\t\"8\n"
      "\016PiDBWriteBatch\022&\n\nWriteBatch\030\001 \003(\0132\022.pi"
      "db.PiDBOperator\"\032\n\014PiDBSnapshot\022\n\n\002id\030\001 "
      "\002(\005\"W\n\014PiDBResponse\022\017\n\007success\030\001 \002(\010\022\021\n\t"
      "old_value\030\002 \001(\t\022\021\n\tnew_value\030\003 \001(\t\022\020\n\010re"
      "direct\030\004 \001(\t\"\007\n\005Empty\"+\n\007Success\022\017\n\007succ"
      "ess\030\001 \002(\010\022\017\n\007message\030\002 \001(\t2\202\002\n\013PiDBServi"
      "ce\022,\n\003Put\022\021.pidb.PiDBRequest\032\022.pidb.PiDB"
      "Response\022,\n\003Get\022\021.pidb.PiDBRequest\032\022.pid"
      "b.PiDBResponse\0221\n\005Write\022\024.pidb.PiDBWrite"
      "Batch\032\022.pidb.PiDBResponse\022.\n\013GetSnapshot"
      "\022\013.pidb.Empty\032\022.pidb.PiDBSnapshot\0224\n\017Rel"
      "easeSnapshot\022\022.pidb.PiDBSnapshot\032\r.pidb."
      "SuccessB\003\200\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 612);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "pidb.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_pidb_2eproto
namespace pidb {

// ===================================================================

void PiDBRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PiDBRequest::kKeyFieldNumber;
const int PiDBRequest::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PiDBRequest::PiDBRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_pidb_2eproto::scc_info_PiDBRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pidb.PiDBRequest)
}
PiDBRequest::PiDBRequest(const PiDBRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:pidb.PiDBRequest)
}

void PiDBRequest::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PiDBRequest::~PiDBRequest() {
  // @@protoc_insertion_point(destructor:pidb.PiDBRequest)
  SharedDtor();
}

void PiDBRequest::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PiDBRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PiDBRequest::descriptor() {
  ::protobuf_pidb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pidb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PiDBRequest& PiDBRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_pidb_2eproto::scc_info_PiDBRequest.base);
  return *internal_default_instance();
}


void PiDBRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pidb.PiDBRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PiDBRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pidb.PiDBRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pidb.PiDBRequest.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pidb.PiDBRequest.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pidb.PiDBRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pidb.PiDBRequest)
  return false;
#undef DO_
}

void PiDBRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pidb.PiDBRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBRequest.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBRequest.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pidb.PiDBRequest)
}

::google::protobuf::uint8* PiDBRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pidb.PiDBRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBRequest.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBRequest.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pidb.PiDBRequest)
  return target;
}

size_t PiDBRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pidb.PiDBRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string key = 1;
  if (has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }
  // optional string value = 2;
  if (has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PiDBRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pidb.PiDBRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PiDBRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PiDBRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pidb.PiDBRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pidb.PiDBRequest)
    MergeFrom(*source);
  }
}

void PiDBRequest::MergeFrom(const PiDBRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pidb.PiDBRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void PiDBRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pidb.PiDBRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PiDBRequest::CopyFrom(const PiDBRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pidb.PiDBRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PiDBRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void PiDBRequest::Swap(PiDBRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PiDBRequest::InternalSwap(PiDBRequest* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PiDBRequest::GetMetadata() const {
  protobuf_pidb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pidb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PiDBOperator::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PiDBOperator::kOpFieldNumber;
const int PiDBOperator::kKeyFieldNumber;
const int PiDBOperator::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PiDBOperator::PiDBOperator()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_pidb_2eproto::scc_info_PiDBOperator.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pidb.PiDBOperator)
}
PiDBOperator::PiDBOperator(const PiDBOperator& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  op_ = from.op_;
  // @@protoc_insertion_point(copy_constructor:pidb.PiDBOperator)
}

void PiDBOperator::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  op_ = 0;
}

PiDBOperator::~PiDBOperator() {
  // @@protoc_insertion_point(destructor:pidb.PiDBOperator)
  SharedDtor();
}

void PiDBOperator::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PiDBOperator::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PiDBOperator::descriptor() {
  ::protobuf_pidb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pidb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PiDBOperator& PiDBOperator::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_pidb_2eproto::scc_info_PiDBOperator.base);
  return *internal_default_instance();
}


void PiDBOperator::Clear() {
// @@protoc_insertion_point(message_clear_start:pidb.PiDBOperator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
  }
  op_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PiDBOperator::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pidb.PiDBOperator)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 op = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_op();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &op_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pidb.PiDBOperator.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pidb.PiDBOperator.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pidb.PiDBOperator)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pidb.PiDBOperator)
  return false;
#undef DO_
}

void PiDBOperator::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pidb.PiDBOperator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 op = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->op(), output);
  }

  // required string key = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBOperator.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->key(), output);
  }

  // optional string value = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBOperator.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pidb.PiDBOperator)
}

::google::protobuf::uint8* PiDBOperator::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pidb.PiDBOperator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 op = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->op(), target);
  }

  // required string key = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBOperator.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->key(), target);
  }

  // optional string value = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBOperator.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pidb.PiDBOperator)
  return target;
}

size_t PiDBOperator::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pidb.PiDBOperator)
  size_t total_size = 0;

  if (has_key()) {
    // required string key = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  if (has_op()) {
    // required int32 op = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->op());
  }

  return total_size;
}
size_t PiDBOperator::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pidb.PiDBOperator)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required string key = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());

    // required int32 op = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->op());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string value = 3;
  if (has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PiDBOperator::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pidb.PiDBOperator)
  GOOGLE_DCHECK_NE(&from, this);
  const PiDBOperator* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PiDBOperator>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pidb.PiDBOperator)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pidb.PiDBOperator)
    MergeFrom(*source);
  }
}

void PiDBOperator::MergeFrom(const PiDBOperator& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pidb.PiDBOperator)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (cached_has_bits & 0x00000004u) {
      op_ = from.op_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PiDBOperator::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pidb.PiDBOperator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PiDBOperator::CopyFrom(const PiDBOperator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pidb.PiDBOperator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PiDBOperator::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  return true;
}

void PiDBOperator::Swap(PiDBOperator* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PiDBOperator::InternalSwap(PiDBOperator* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(op_, other->op_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PiDBOperator::GetMetadata() const {
  protobuf_pidb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pidb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PiDBWriteBatch::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PiDBWriteBatch::kWriteBatchFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PiDBWriteBatch::PiDBWriteBatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_pidb_2eproto::scc_info_PiDBWriteBatch.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pidb.PiDBWriteBatch)
}
PiDBWriteBatch::PiDBWriteBatch(const PiDBWriteBatch& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      writebatch_(from.writebatch_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pidb.PiDBWriteBatch)
}

void PiDBWriteBatch::SharedCtor() {
}

PiDBWriteBatch::~PiDBWriteBatch() {
  // @@protoc_insertion_point(destructor:pidb.PiDBWriteBatch)
  SharedDtor();
}

void PiDBWriteBatch::SharedDtor() {
}

void PiDBWriteBatch::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PiDBWriteBatch::descriptor() {
  ::protobuf_pidb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pidb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PiDBWriteBatch& PiDBWriteBatch::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_pidb_2eproto::scc_info_PiDBWriteBatch.base);
  return *internal_default_instance();
}


void PiDBWriteBatch::Clear() {
// @@protoc_insertion_point(message_clear_start:pidb.PiDBWriteBatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  writebatch_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PiDBWriteBatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pidb.PiDBWriteBatch)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pidb.PiDBOperator WriteBatch = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_writebatch()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pidb.PiDBWriteBatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pidb.PiDBWriteBatch)
  return false;
#undef DO_
}

void PiDBWriteBatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pidb.PiDBWriteBatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pidb.PiDBOperator WriteBatch = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->writebatch_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->writebatch(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pidb.PiDBWriteBatch)
}

::google::protobuf::uint8* PiDBWriteBatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pidb.PiDBWriteBatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pidb.PiDBOperator WriteBatch = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->writebatch_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->writebatch(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pidb.PiDBWriteBatch)
  return target;
}

size_t PiDBWriteBatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pidb.PiDBWriteBatch)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .pidb.PiDBOperator WriteBatch = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->writebatch_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->writebatch(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PiDBWriteBatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pidb.PiDBWriteBatch)
  GOOGLE_DCHECK_NE(&from, this);
  const PiDBWriteBatch* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PiDBWriteBatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pidb.PiDBWriteBatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pidb.PiDBWriteBatch)
    MergeFrom(*source);
  }
}

void PiDBWriteBatch::MergeFrom(const PiDBWriteBatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pidb.PiDBWriteBatch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  writebatch_.MergeFrom(from.writebatch_);
}

void PiDBWriteBatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pidb.PiDBWriteBatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PiDBWriteBatch::CopyFrom(const PiDBWriteBatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pidb.PiDBWriteBatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PiDBWriteBatch::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->writebatch())) return false;
  return true;
}

void PiDBWriteBatch::Swap(PiDBWriteBatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PiDBWriteBatch::InternalSwap(PiDBWriteBatch* other) {
  using std::swap;
  CastToBase(&writebatch_)->InternalSwap(CastToBase(&other->writebatch_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PiDBWriteBatch::GetMetadata() const {
  protobuf_pidb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pidb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PiDBSnapshot::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PiDBSnapshot::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PiDBSnapshot::PiDBSnapshot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_pidb_2eproto::scc_info_PiDBSnapshot.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pidb.PiDBSnapshot)
}
PiDBSnapshot::PiDBSnapshot(const PiDBSnapshot& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:pidb.PiDBSnapshot)
}

void PiDBSnapshot::SharedCtor() {
  id_ = 0;
}

PiDBSnapshot::~PiDBSnapshot() {
  // @@protoc_insertion_point(destructor:pidb.PiDBSnapshot)
  SharedDtor();
}

void PiDBSnapshot::SharedDtor() {
}

void PiDBSnapshot::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PiDBSnapshot::descriptor() {
  ::protobuf_pidb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pidb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PiDBSnapshot& PiDBSnapshot::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_pidb_2eproto::scc_info_PiDBSnapshot.base);
  return *internal_default_instance();
}


void PiDBSnapshot::Clear() {
// @@protoc_insertion_point(message_clear_start:pidb.PiDBSnapshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PiDBSnapshot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pidb.PiDBSnapshot)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pidb.PiDBSnapshot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pidb.PiDBSnapshot)
  return false;
#undef DO_
}

void PiDBSnapshot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pidb.PiDBSnapshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pidb.PiDBSnapshot)
}

::google::protobuf::uint8* PiDBSnapshot::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pidb.PiDBSnapshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pidb.PiDBSnapshot)
  return target;
}

size_t PiDBSnapshot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pidb.PiDBSnapshot)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PiDBSnapshot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pidb.PiDBSnapshot)
  GOOGLE_DCHECK_NE(&from, this);
  const PiDBSnapshot* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PiDBSnapshot>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pidb.PiDBSnapshot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pidb.PiDBSnapshot)
    MergeFrom(*source);
  }
}

void PiDBSnapshot::MergeFrom(const PiDBSnapshot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pidb.PiDBSnapshot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    set_id(from.id());
  }
}

void PiDBSnapshot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pidb.PiDBSnapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PiDBSnapshot::CopyFrom(const PiDBSnapshot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pidb.PiDBSnapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PiDBSnapshot::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void PiDBSnapshot::Swap(PiDBSnapshot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PiDBSnapshot::InternalSwap(PiDBSnapshot* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PiDBSnapshot::GetMetadata() const {
  protobuf_pidb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pidb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PiDBResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PiDBResponse::kSuccessFieldNumber;
const int PiDBResponse::kOldValueFieldNumber;
const int PiDBResponse::kNewValueFieldNumber;
const int PiDBResponse::kRedirectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PiDBResponse::PiDBResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_pidb_2eproto::scc_info_PiDBResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pidb.PiDBResponse)
}
PiDBResponse::PiDBResponse(const PiDBResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  old_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_old_value()) {
    old_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.old_value_);
  }
  new_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_new_value()) {
    new_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_value_);
  }
  redirect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_redirect()) {
    redirect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:pidb.PiDBResponse)
}

void PiDBResponse::SharedCtor() {
  old_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  redirect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

PiDBResponse::~PiDBResponse() {
  // @@protoc_insertion_point(destructor:pidb.PiDBResponse)
  SharedDtor();
}

void PiDBResponse::SharedDtor() {
  old_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  redirect_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PiDBResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PiDBResponse::descriptor() {
  ::protobuf_pidb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pidb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PiDBResponse& PiDBResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_pidb_2eproto::scc_info_PiDBResponse.base);
  return *internal_default_instance();
}


void PiDBResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pidb.PiDBResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      old_value_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      new_value_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      redirect_.ClearNonDefaultToEmptyNoArena();
    }
  }
  success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PiDBResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pidb.PiDBResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string old_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_old_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->old_value().data(), static_cast<int>(this->old_value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pidb.PiDBResponse.old_value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string new_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_new_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->new_value().data(), static_cast<int>(this->new_value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pidb.PiDBResponse.new_value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string redirect = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_redirect()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->redirect().data(), static_cast<int>(this->redirect().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pidb.PiDBResponse.redirect");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pidb.PiDBResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pidb.PiDBResponse)
  return false;
#undef DO_
}

void PiDBResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pidb.PiDBResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // optional string old_value = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->old_value().data(), static_cast<int>(this->old_value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBResponse.old_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->old_value(), output);
  }

  // optional string new_value = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->new_value().data(), static_cast<int>(this->new_value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBResponse.new_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->new_value(), output);
  }

  // optional string redirect = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirect().data(), static_cast<int>(this->redirect().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBResponse.redirect");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->redirect(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pidb.PiDBResponse)
}

::google::protobuf::uint8* PiDBResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pidb.PiDBResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // optional string old_value = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->old_value().data(), static_cast<int>(this->old_value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBResponse.old_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->old_value(), target);
  }

  // optional string new_value = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->new_value().data(), static_cast<int>(this->new_value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBResponse.new_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->new_value(), target);
  }

  // optional string redirect = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirect().data(), static_cast<int>(this->redirect().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.PiDBResponse.redirect");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->redirect(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pidb.PiDBResponse)
  return target;
}

size_t PiDBResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pidb.PiDBResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bool success = 1;
  if (has_success()) {
    total_size += 1 + 1;
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string old_value = 2;
    if (has_old_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->old_value());
    }

    // optional string new_value = 3;
    if (has_new_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->new_value());
    }

    // optional string redirect = 4;
    if (has_redirect()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->redirect());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PiDBResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pidb.PiDBResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PiDBResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PiDBResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pidb.PiDBResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pidb.PiDBResponse)
    MergeFrom(*source);
  }
}

void PiDBResponse::MergeFrom(const PiDBResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pidb.PiDBResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_old_value();
      old_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.old_value_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_new_value();
      new_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_value_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_redirect();
      redirect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_);
    }
    if (cached_has_bits & 0x00000008u) {
      success_ = from.success_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PiDBResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pidb.PiDBResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PiDBResponse::CopyFrom(const PiDBResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pidb.PiDBResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PiDBResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000008) != 0x00000008) return false;
  return true;
}

void PiDBResponse::Swap(PiDBResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PiDBResponse::InternalSwap(PiDBResponse* other) {
  using std::swap;
  old_value_.Swap(&other->old_value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  new_value_.Swap(&other->new_value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  redirect_.Swap(&other->redirect_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(success_, other->success_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PiDBResponse::GetMetadata() const {
  protobuf_pidb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pidb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Empty::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Empty::Empty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_pidb_2eproto::scc_info_Empty.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pidb.Empty)
}
Empty::Empty(const Empty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pidb.Empty)
}

void Empty::SharedCtor() {
}

Empty::~Empty() {
  // @@protoc_insertion_point(destructor:pidb.Empty)
  SharedDtor();
}

void Empty::SharedDtor() {
}

void Empty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Empty::descriptor() {
  ::protobuf_pidb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pidb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Empty& Empty::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_pidb_2eproto::scc_info_Empty.base);
  return *internal_default_instance();
}


void Empty::Clear() {
// @@protoc_insertion_point(message_clear_start:pidb.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Empty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pidb.Empty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pidb.Empty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pidb.Empty)
  return false;
#undef DO_
}

void Empty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pidb.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pidb.Empty)
}

::google::protobuf::uint8* Empty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pidb.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pidb.Empty)
  return target;
}

size_t Empty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pidb.Empty)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Empty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pidb.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  const Empty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Empty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pidb.Empty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pidb.Empty)
    MergeFrom(*source);
  }
}

void Empty::MergeFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pidb.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Empty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pidb.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Empty::CopyFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pidb.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Empty::IsInitialized() const {
  return true;
}

void Empty::Swap(Empty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Empty::InternalSwap(Empty* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Empty::GetMetadata() const {
  protobuf_pidb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pidb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Success::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Success::kSuccessFieldNumber;
const int Success::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Success::Success()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_pidb_2eproto::scc_info_Success.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pidb.Success)
}
Success::Success(const Success& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:pidb.Success)
}

void Success::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

Success::~Success() {
  // @@protoc_insertion_point(destructor:pidb.Success)
  SharedDtor();
}

void Success::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Success::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Success::descriptor() {
  ::protobuf_pidb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pidb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Success& Success::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_pidb_2eproto::scc_info_Success.base);
  return *internal_default_instance();
}


void Success::Clear() {
// @@protoc_insertion_point(message_clear_start:pidb.Success)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    message_.ClearNonDefaultToEmptyNoArena();
  }
  success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Success::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pidb.Success)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pidb.Success.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pidb.Success)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pidb.Success)
  return false;
#undef DO_
}

void Success::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pidb.Success)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // optional string message = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.Success.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pidb.Success)
}

::google::protobuf::uint8* Success::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pidb.Success)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // optional string message = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pidb.Success.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pidb.Success)
  return target;
}

size_t Success::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pidb.Success)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bool success = 1;
  if (has_success()) {
    total_size += 1 + 1;
  }
  // optional string message = 2;
  if (has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Success::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pidb.Success)
  GOOGLE_DCHECK_NE(&from, this);
  const Success* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Success>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pidb.Success)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pidb.Success)
    MergeFrom(*source);
  }
}

void Success::MergeFrom(const Success& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pidb.Success)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_message();
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (cached_has_bits & 0x00000002u) {
      success_ = from.success_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Success::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pidb.Success)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Success::CopyFrom(const Success& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pidb.Success)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Success::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void Success::Swap(Success* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Success::InternalSwap(Success* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(success_, other->success_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Success::GetMetadata() const {
  protobuf_pidb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pidb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

PiDBService::~PiDBService() {}

const ::google::protobuf::ServiceDescriptor* PiDBService::descriptor() {
  protobuf_pidb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pidb_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* PiDBService::GetDescriptor() {
  return descriptor();
}

void PiDBService::Put(::google::protobuf::RpcController* controller,
                         const ::pidb::PiDBRequest*,
                         ::pidb::PiDBResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Put() not implemented.");
  done->Run();
}

void PiDBService::Get(::google::protobuf::RpcController* controller,
                         const ::pidb::PiDBRequest*,
                         ::pidb::PiDBResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Get() not implemented.");
  done->Run();
}

void PiDBService::Write(::google::protobuf::RpcController* controller,
                         const ::pidb::PiDBWriteBatch*,
                         ::pidb::PiDBResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Write() not implemented.");
  done->Run();
}

void PiDBService::GetSnapshot(::google::protobuf::RpcController* controller,
                         const ::pidb::Empty*,
                         ::pidb::PiDBSnapshot*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetSnapshot() not implemented.");
  done->Run();
}

void PiDBService::ReleaseSnapshot(::google::protobuf::RpcController* controller,
                         const ::pidb::PiDBSnapshot*,
                         ::pidb::Success*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ReleaseSnapshot() not implemented.");
  done->Run();
}

void PiDBService::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_pidb_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      Put(controller,
             ::google::protobuf::down_cast<const ::pidb::PiDBRequest*>(request),
             ::google::protobuf::down_cast< ::pidb::PiDBResponse*>(response),
             done);
      break;
    case 1:
      Get(controller,
             ::google::protobuf::down_cast<const ::pidb::PiDBRequest*>(request),
             ::google::protobuf::down_cast< ::pidb::PiDBResponse*>(response),
             done);
      break;
    case 2:
      Write(controller,
             ::google::protobuf::down_cast<const ::pidb::PiDBWriteBatch*>(request),
             ::google::protobuf::down_cast< ::pidb::PiDBResponse*>(response),
             done);
      break;
    case 3:
      GetSnapshot(controller,
             ::google::protobuf::down_cast<const ::pidb::Empty*>(request),
             ::google::protobuf::down_cast< ::pidb::PiDBSnapshot*>(response),
             done);
      break;
    case 4:
      ReleaseSnapshot(controller,
             ::google::protobuf::down_cast<const ::pidb::PiDBSnapshot*>(request),
             ::google::protobuf::down_cast< ::pidb::Success*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& PiDBService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::pidb::PiDBRequest::default_instance();
    case 1:
      return ::pidb::PiDBRequest::default_instance();
    case 2:
      return ::pidb::PiDBWriteBatch::default_instance();
    case 3:
      return ::pidb::Empty::default_instance();
    case 4:
      return ::pidb::PiDBSnapshot::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& PiDBService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::pidb::PiDBResponse::default_instance();
    case 1:
      return ::pidb::PiDBResponse::default_instance();
    case 2:
      return ::pidb::PiDBResponse::default_instance();
    case 3:
      return ::pidb::PiDBSnapshot::default_instance();
    case 4:
      return ::pidb::Success::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

PiDBService_Stub::PiDBService_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
PiDBService_Stub::PiDBService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
PiDBService_Stub::~PiDBService_Stub() {
  if (owns_channel_) delete channel_;
}

void PiDBService_Stub::Put(::google::protobuf::RpcController* controller,
                              const ::pidb::PiDBRequest* request,
                              ::pidb::PiDBResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void PiDBService_Stub::Get(::google::protobuf::RpcController* controller,
                              const ::pidb::PiDBRequest* request,
                              ::pidb::PiDBResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void PiDBService_Stub::Write(::google::protobuf::RpcController* controller,
                              const ::pidb::PiDBWriteBatch* request,
                              ::pidb::PiDBResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void PiDBService_Stub::GetSnapshot(::google::protobuf::RpcController* controller,
                              const ::pidb::Empty* request,
                              ::pidb::PiDBSnapshot* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}
void PiDBService_Stub::ReleaseSnapshot(::google::protobuf::RpcController* controller,
                              const ::pidb::PiDBSnapshot* request,
                              ::pidb::Success* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(4),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace pidb
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pidb::PiDBRequest* Arena::CreateMaybeMessage< ::pidb::PiDBRequest >(Arena* arena) {
  return Arena::CreateInternal< ::pidb::PiDBRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pidb::PiDBOperator* Arena::CreateMaybeMessage< ::pidb::PiDBOperator >(Arena* arena) {
  return Arena::CreateInternal< ::pidb::PiDBOperator >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pidb::PiDBWriteBatch* Arena::CreateMaybeMessage< ::pidb::PiDBWriteBatch >(Arena* arena) {
  return Arena::CreateInternal< ::pidb::PiDBWriteBatch >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pidb::PiDBSnapshot* Arena::CreateMaybeMessage< ::pidb::PiDBSnapshot >(Arena* arena) {
  return Arena::CreateInternal< ::pidb::PiDBSnapshot >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pidb::PiDBResponse* Arena::CreateMaybeMessage< ::pidb::PiDBResponse >(Arena* arena) {
  return Arena::CreateInternal< ::pidb::PiDBResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pidb::Empty* Arena::CreateMaybeMessage< ::pidb::Empty >(Arena* arena) {
  return Arena::CreateInternal< ::pidb::Empty >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pidb::Success* Arena::CreateMaybeMessage< ::pidb::Success >(Arena* arena) {
  return Arena::CreateInternal< ::pidb::Success >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
